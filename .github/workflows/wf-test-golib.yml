name: test Go library module

on:
  workflow_call:
    inputs:
      go-cache:
        type: boolean
        default: false
      working-directory:
        type: string
        required: true

jobs:
  lint:
    strategy:
      matrix: &test_golib_matrix
        go-version: [stable, oldstable]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: ${{ inputs.go-cache }}
          working-directory: ${{ inputs.working-directory }}
      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          args: --timeout=10m
          working-directory: ${{ inputs.working-directory }}

  test:
    strategy:
      matrix: *test_golib_matrix
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: ${{ inputs.go-cache }}
          working-directory: ${{ inputs.working-directory }}
      - name: Run Go tests
        run: |
          set -o pipefail
          go test ./... -cover -json > ./go-test.out
        working-directory: ${{ inputs.working-directory }}
      - name: Format test result
        if: always()
        run: |
          go tool tparse -all -file ./go-test.out
          go tool tparse -all -file ./go-test.out -format markdown >> "$GITHUB_STEP_SUMMARY"
        working-directory: ${{ inputs.working-directory }}
